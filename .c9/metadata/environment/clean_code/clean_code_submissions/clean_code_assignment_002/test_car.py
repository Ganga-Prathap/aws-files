{"filter":false,"title":"test_car.py","tooltip":"/clean_code/clean_code_submissions/clean_code_assignment_002/test_car.py","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":189,"column":72},"end":{"row":189,"column":73},"action":"remove","lines":["e"],"id":103},{"start":{"row":189,"column":71},"end":{"row":189,"column":72},"action":"remove","lines":["t"]},{"start":{"row":189,"column":70},"end":{"row":189,"column":71},"action":"remove","lines":["a"]},{"start":{"row":189,"column":69},"end":{"row":189,"column":70},"action":"remove","lines":["r"]},{"start":{"row":189,"column":68},"end":{"row":189,"column":69},"action":"remove","lines":["e"]},{"start":{"row":189,"column":67},"end":{"row":189,"column":68},"action":"remove","lines":["l"]},{"start":{"row":189,"column":66},"end":{"row":189,"column":67},"action":"remove","lines":["e"]},{"start":{"row":189,"column":65},"end":{"row":189,"column":66},"action":"remove","lines":["c"]},{"start":{"row":189,"column":64},"end":{"row":189,"column":65},"action":"remove","lines":["c"]},{"start":{"row":189,"column":63},"end":{"row":189,"column":64},"action":"remove","lines":["a"]},{"start":{"row":189,"column":62},"end":{"row":189,"column":63},"action":"remove","lines":["_"]},{"start":{"row":189,"column":61},"end":{"row":189,"column":62},"action":"remove","lines":["o"]}],[{"start":{"row":189,"column":60},"end":{"row":189,"column":61},"action":"remove","lines":["t"],"id":104},{"start":{"row":189,"column":59},"end":{"row":189,"column":60},"action":"remove","lines":["_"]}],[{"start":{"row":189,"column":47},"end":{"row":189,"column":48},"action":"insert","lines":["p"],"id":105},{"start":{"row":189,"column":48},"end":{"row":189,"column":49},"action":"insert","lines":["r"]},{"start":{"row":189,"column":49},"end":{"row":189,"column":50},"action":"insert","lines":["i"]},{"start":{"row":189,"column":50},"end":{"row":189,"column":51},"action":"insert","lines":["n"]},{"start":{"row":189,"column":51},"end":{"row":189,"column":52},"action":"insert","lines":["t"]},{"start":{"row":189,"column":52},"end":{"row":189,"column":53},"action":"insert","lines":["_"]}],[{"start":{"row":190,"column":0},"end":{"row":190,"column":4},"action":"remove","lines":["    "],"id":106}],[{"start":{"row":191,"column":4},"end":{"row":191,"column":5},"action":"remove","lines":[" "],"id":107}],[{"start":{"row":199,"column":0},"end":{"row":199,"column":4},"action":"remove","lines":["    "],"id":108}],[{"start":{"row":203,"column":0},"end":{"row":203,"column":4},"action":"remove","lines":["    "],"id":109}],[{"start":{"row":206,"column":0},"end":{"row":207,"column":0},"action":"insert","lines":["",""],"id":110}],[{"start":{"row":208,"column":12},"end":{"row":208,"column":13},"action":"remove","lines":[" "],"id":111},{"start":{"row":208,"column":11},"end":{"row":208,"column":12},"action":"remove","lines":[" "]},{"start":{"row":208,"column":10},"end":{"row":208,"column":11},"action":"remove","lines":[" "]},{"start":{"row":208,"column":9},"end":{"row":208,"column":10},"action":"remove","lines":[" "]}],[{"start":{"row":210,"column":0},"end":{"row":210,"column":4},"action":"remove","lines":["    "],"id":112}],[{"start":{"row":220,"column":0},"end":{"row":220,"column":4},"action":"remove","lines":["    "],"id":113}],[{"start":{"row":226,"column":0},"end":{"row":226,"column":4},"action":"remove","lines":["    "],"id":114}],[{"start":{"row":229,"column":0},"end":{"row":230,"column":0},"action":"insert","lines":["",""],"id":115}],[{"start":{"row":232,"column":87},"end":{"row":232,"column":88},"action":"remove","lines":[" "],"id":116},{"start":{"row":232,"column":86},"end":{"row":232,"column":87},"action":"remove","lines":[" "]}],[{"start":{"row":233,"column":0},"end":{"row":233,"column":4},"action":"remove","lines":["    "],"id":117}],[{"start":{"row":243,"column":0},"end":{"row":243,"column":4},"action":"remove","lines":["    "],"id":118}],[{"start":{"row":249,"column":0},"end":{"row":249,"column":4},"action":"remove","lines":["    "],"id":119}],[{"start":{"row":252,"column":0},"end":{"row":252,"column":4},"action":"remove","lines":["    "],"id":120}],[{"start":{"row":252,"column":0},"end":{"row":253,"column":0},"action":"insert","lines":["",""],"id":121}],[{"start":{"row":256,"column":0},"end":{"row":256,"column":4},"action":"remove","lines":["    "],"id":122}],[{"start":{"row":269,"column":0},"end":{"row":269,"column":4},"action":"remove","lines":["    "],"id":123}],[{"start":{"row":274,"column":0},"end":{"row":274,"column":4},"action":"remove","lines":["    "],"id":124}],[{"start":{"row":277,"column":0},"end":{"row":278,"column":0},"action":"insert","lines":["",""],"id":125}],[{"start":{"row":281,"column":0},"end":{"row":281,"column":4},"action":"remove","lines":["    "],"id":126}],[{"start":{"row":292,"column":0},"end":{"row":292,"column":4},"action":"remove","lines":["    "],"id":127}],[{"start":{"row":295,"column":0},"end":{"row":295,"column":4},"action":"remove","lines":["    "],"id":128}],[{"start":{"row":298,"column":0},"end":{"row":299,"column":0},"action":"insert","lines":["",""],"id":129}],[{"start":{"row":302,"column":0},"end":{"row":302,"column":4},"action":"remove","lines":["    "],"id":130}],[{"start":{"row":313,"column":0},"end":{"row":313,"column":4},"action":"remove","lines":["    "],"id":131}],[{"start":{"row":318,"column":0},"end":{"row":318,"column":4},"action":"remove","lines":["    "],"id":132}],[{"start":{"row":321,"column":0},"end":{"row":322,"column":0},"action":"insert","lines":["",""],"id":133}],[{"start":{"row":325,"column":0},"end":{"row":325,"column":4},"action":"remove","lines":["    "],"id":134}],[{"start":{"row":335,"column":0},"end":{"row":335,"column":4},"action":"remove","lines":["    "],"id":135}],[{"start":{"row":342,"column":0},"end":{"row":343,"column":0},"action":"insert","lines":["",""],"id":136}],[{"start":{"row":346,"column":0},"end":{"row":346,"column":4},"action":"remove","lines":["    "],"id":137}],[{"start":{"row":355,"column":0},"end":{"row":355,"column":4},"action":"remove","lines":["    "],"id":138}],[{"start":{"row":362,"column":0},"end":{"row":362,"column":4},"action":"remove","lines":["    "],"id":139}],[{"start":{"row":362,"column":0},"end":{"row":363,"column":0},"action":"insert","lines":["",""],"id":140}],[{"start":{"row":366,"column":0},"end":{"row":366,"column":4},"action":"remove","lines":["    "],"id":141}],[{"start":{"row":375,"column":0},"end":{"row":375,"column":4},"action":"remove","lines":["    "],"id":142}],[{"start":{"row":377,"column":0},"end":{"row":377,"column":4},"action":"remove","lines":["    "],"id":143}],[{"start":{"row":380,"column":0},"end":{"row":380,"column":4},"action":"remove","lines":["    "],"id":144}],[{"start":{"row":380,"column":0},"end":{"row":381,"column":0},"action":"insert","lines":["",""],"id":145}],[{"start":{"row":384,"column":0},"end":{"row":384,"column":4},"action":"remove","lines":["    "],"id":146}],[{"start":{"row":387,"column":0},"end":{"row":387,"column":4},"action":"remove","lines":["    "],"id":147}],[{"start":{"row":391,"column":8},"end":{"row":392,"column":4},"action":"remove","lines":["","    "],"id":148},{"start":{"row":391,"column":4},"end":{"row":391,"column":8},"action":"remove","lines":["    "]}],[{"start":{"row":391,"column":0},"end":{"row":391,"column":4},"action":"remove","lines":["    "],"id":149}],[{"start":{"row":394,"column":0},"end":{"row":394,"column":4},"action":"remove","lines":["    "],"id":150}],[{"start":{"row":394,"column":0},"end":{"row":395,"column":0},"action":"insert","lines":["",""],"id":151}],[{"start":{"row":398,"column":0},"end":{"row":398,"column":4},"action":"remove","lines":["    "],"id":152}],[{"start":{"row":401,"column":0},"end":{"row":401,"column":4},"action":"remove","lines":["    "],"id":153}],[{"start":{"row":405,"column":4},"end":{"row":405,"column":8},"action":"remove","lines":["    "],"id":154},{"start":{"row":405,"column":0},"end":{"row":405,"column":4},"action":"remove","lines":["    "]},{"start":{"row":404,"column":29},"end":{"row":405,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":404,"column":29},"end":{"row":405,"column":0},"action":"insert","lines":["",""],"id":155},{"start":{"row":405,"column":0},"end":{"row":405,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":405,"column":4},"end":{"row":405,"column":8},"action":"remove","lines":["    "],"id":156},{"start":{"row":405,"column":0},"end":{"row":405,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":408,"column":0},"end":{"row":408,"column":4},"action":"remove","lines":["    "],"id":157}],[{"start":{"row":408,"column":0},"end":{"row":409,"column":0},"action":"insert","lines":["",""],"id":158}],[{"start":{"row":412,"column":0},"end":{"row":412,"column":4},"action":"remove","lines":["    "],"id":159}],[{"start":{"row":415,"column":0},"end":{"row":415,"column":4},"action":"remove","lines":["    "],"id":160}],[{"start":{"row":419,"column":4},"end":{"row":419,"column":8},"action":"remove","lines":["    "],"id":161},{"start":{"row":419,"column":0},"end":{"row":419,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":421,"column":46},"end":{"row":422,"column":4},"action":"remove","lines":["","    "],"id":162}],[{"start":{"row":421,"column":46},"end":{"row":422,"column":0},"action":"insert","lines":["",""],"id":163},{"start":{"row":422,"column":0},"end":{"row":422,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":422,"column":0},"end":{"row":422,"column":4},"action":"remove","lines":["    "],"id":164}],[{"start":{"row":422,"column":0},"end":{"row":423,"column":0},"action":"insert","lines":["",""],"id":165}],[{"start":{"row":426,"column":0},"end":{"row":426,"column":4},"action":"remove","lines":["    "],"id":166}],[{"start":{"row":429,"column":0},"end":{"row":429,"column":4},"action":"remove","lines":["    "],"id":167}],[{"start":{"row":433,"column":0},"end":{"row":433,"column":4},"action":"remove","lines":["    "],"id":168}],[{"start":{"row":436,"column":0},"end":{"row":436,"column":4},"action":"remove","lines":["    "],"id":169}],[{"start":{"row":436,"column":0},"end":{"row":437,"column":0},"action":"insert","lines":["",""],"id":170}],[{"start":{"row":440,"column":0},"end":{"row":440,"column":4},"action":"remove","lines":["    "],"id":171}],[{"start":{"row":443,"column":0},"end":{"row":443,"column":4},"action":"remove","lines":["    "],"id":172}],[{"start":{"row":446,"column":37},"end":{"row":447,"column":8},"action":"remove","lines":["","        "],"id":173}],[{"start":{"row":446,"column":37},"end":{"row":447,"column":0},"action":"insert","lines":["",""],"id":174},{"start":{"row":447,"column":0},"end":{"row":447,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":447,"column":4},"end":{"row":447,"column":8},"action":"remove","lines":["    "],"id":175},{"start":{"row":447,"column":0},"end":{"row":447,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":450,"column":0},"end":{"row":450,"column":4},"action":"remove","lines":["    "],"id":176}],[{"start":{"row":450,"column":0},"end":{"row":451,"column":0},"action":"insert","lines":["",""],"id":177}],[{"start":{"row":454,"column":0},"end":{"row":454,"column":4},"action":"remove","lines":["    "],"id":178}],[{"start":{"row":457,"column":0},"end":{"row":457,"column":4},"action":"remove","lines":["    "],"id":179}],[{"start":{"row":461,"column":0},"end":{"row":461,"column":4},"action":"remove","lines":["    "],"id":180}],[{"start":{"row":461,"column":0},"end":{"row":461,"column":4},"action":"remove","lines":["    "],"id":181}],[{"start":{"row":463,"column":46},"end":{"row":464,"column":0},"action":"insert","lines":["",""],"id":182},{"start":{"row":464,"column":0},"end":{"row":464,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":464,"column":0},"end":{"row":464,"column":4},"action":"remove","lines":["    "],"id":183}],[{"start":{"row":0,"column":0},"end":{"row":464,"column":0},"action":"remove","lines":["import pytest","from car import Car","","","@pytest.fixture","def car():","","    car_obj = Car(","        color='Red',","        max_speed=30,","        acceleration=10,","        tyre_friction=3","    )","    return car_obj","","","# case-1","def test_create_car_object_instance_with_valid_details():","","    # Arrange","    color = 'Blue'","    max_speed = 30","    acceleration = 10","    tyre_friction = 5","","    # Act","    car = Car(","        color=color,","        max_speed=max_speed,","        acceleration=acceleration,","        tyre_friction=tyre_friction","    )","","    # Assert","    assert car.color == color","    assert car.max_speed == max_speed","    assert car.acceleration == acceleration","    assert car.tyre_friction == tyre_friction","","","# case-2","@pytest.mark.parametrize(\"color, max_speed, acceleration, tyre_friction\", [","    ('Red', 1, 1, 1)])","def test_create_car_object_instance_multiple_times_with_valid_details(","        color, max_speed, acceleration, tyre_friction):","","    # Arrange","","    # Act","    car_1 = Car(","        color=color,","        max_speed=max_speed,","        acceleration=acceleration,","        tyre_friction=tyre_friction","    )","","    car_2 = Car(","        color=color,","        max_speed=max_speed,","        acceleration=acceleration,","        tyre_friction=tyre_friction","    )","","    # Assert","    assert car_1.color == color","    assert car_1.max_speed == max_speed","    assert car_1.acceleration == acceleration","    assert car_1.tyre_friction == tyre_friction","","    assert car_2.color == color","    assert car_2.max_speed == max_speed","    assert car_2.acceleration == acceleration","    assert car_2.tyre_friction == tyre_friction","","","# case-3","@pytest.mark.parametrize(\"color, max_speed, acceleration, tyre_friction\", [","    ('Red', 0, 10, 15), ('Blue', -1, 10, 5)])","def test_create_car_object_with_invalid_max_speed_value_raise_error(","        color, max_speed, acceleration, tyre_friction):","","    # Arrange","    invalid_max_speed = 'Invalid value for max_speed'","","    # Act","    with pytest.raises(ValueError) as car:","        assert Car(","            color=color,","            max_speed=max_speed,","            acceleration=acceleration,","            tyre_friction=tyre_friction","        )","","    # Assert","    assert str(car.value) == invalid_max_speed","","","# case-3","@pytest.mark.parametrize(\"color, max_speed, acceleration, tyre_friction\", [","    ('Red', 30, 0, 5), ('Blue', 30, -1, 5)])","def test_create_car_object_with_invalid_acceleration_value_raise_error(","        color, max_speed, acceleration, tyre_friction):","","    # Arrange","    invalid_acceleration = 'Invalid value for acceleration'","","    # Act","    with pytest.raises(ValueError) as car:","        assert Car(","            color=color,","            max_speed=max_speed,","            acceleration=acceleration,","            tyre_friction=tyre_friction","        )","","    # Assert","    assert str(car.value) == invalid_acceleration","","","# case-3","@pytest.mark.parametrize(\"color, max_speed, acceleration, tyre_friction\", [","    ('Red', 30, 10, 0), ('Blue', 30, 10, -1)])","def test_create_car_object_with_invalid_tyre_friction_value_raise_error(","        color, max_speed, acceleration, tyre_friction):","","    # Arrange","    invalid_tyre_friction = 'Invalid value for tyre_friction'","","    # Act","    with pytest.raises(ValueError) as car:","        assert Car(","            color=color,","            max_speed=max_speed,","            acceleration=acceleration,","            tyre_friction=tyre_friction","        )","","    # Assert","    assert str(car.value) == invalid_tyre_friction","","","# case-9","def test_start_engine_when_car_is_in_rest_and_update_is_engine_started(car):","","    # Arrange","    engine_started = True","","    # Act","    car.start_engine()","","    # Assert","    assert car.is_engine_started == engine_started","","","# case-10","def test_stop_engine_when_car_is_in_motion_and_update_is_engine_started(car):","","    # Arrange","    engine_started = False","    car.start_engine()","","    # Act","    car.stop_engine()","","    # Assert","    assert car.is_engine_started == engine_started","","","# case-11","def test_accelerate_car_when_engine_started_and_update_current_speed():","","    # Arrange","    car = Car(","        color='Red',","        max_speed=20,","        acceleration=10,","        tyre_friction=5","    )","    current_speed_value = 10","    car.start_engine()","","    # Act","    car.accelerate()","","    # Assert","    assert car.current_speed == current_speed_value","","","# case-12","def test_accelerate_car_when_engine_stoped_and_print_start_engine(capfd):","","    # Arrange","    car = Car(","        color='Red',","        max_speed=20,","        acceleration=10,","        tyre_friction=5","    )","    start_engine_to_accelerate = \"Start the engine to accelerate\\n\"","","    # Act","    car.accelerate()","    output = capfd.readouterr()","","    # Assert","    assert output.out == start_engine_to_accelerate","","","# case-13","def test_accelerate_car_multiple_times_and_update_current_speed():","","    # Arrange","    car = Car(","        color='Red',","        max_speed=100,","        acceleration=10,","        tyre_friction=5","    )","    current_speed_value = 40","    car.start_engine()","","    # Act","    car.accelerate()","    car.accelerate()","    car.accelerate()","    car.accelerate()","","    # Assert","    assert car.current_speed == current_speed_value","","","# case-14","def test_accelerate_car_when_current_speed_reaches_maximum_and_update_current_speed():","","    # Arrange","    car = Car(","        color='Red',","        max_speed=30,","        acceleration=10,","        tyre_friction=5","    )","    current_speed_value = 30","    car.start_engine()","","    # Act","    car.accelerate()","    car.accelerate()","    car.accelerate()","    car.accelerate()","","    # Assert","    assert car.current_speed == current_speed_value","","","# case-15","def test_apply_brakes_to_car_and_update_current_speed():","","    # Arrange","    car = Car(","        color='Red',","        max_speed=100,","        acceleration=10,","        tyre_friction=10","    )","    current_speed_value = 0","    car.start_engine()","    car.accelerate()","    car.accelerate()","    car.accelerate()","","    # Act","    car.apply_brakes()","    car.apply_brakes()","    car.apply_brakes()","","    # Assert","    assert car.current_speed == current_speed_value","","","# case-16","def test_apply_brakes_when_car_current_speed_is_less_than_tyre_friction_and_update_current_speed():","","    # Arrange","    car = Car(","        color='Red',","        max_speed=20,","        acceleration=9,","        tyre_friction=10","    )","    current_speed_value = 0","    car.start_engine()","    car.accelerate()","","    # Act","    car.apply_brakes()","","    # Assert","    assert car.current_speed == current_speed_value","","","# case-17","def test_apply_brakes_when_car_current_speed_is_more_than_tyre_friction_and_update_current_speed():","","    # Arrange","    car = Car(","        color='Red',","        max_speed=130,","        acceleration=10,","        tyre_friction=3","    )","    current_speed_value = 1","    car.start_engine()","    car.accelerate()","","    # Act","    car.apply_brakes()","    car.apply_brakes()","    car.apply_brakes()","","    # Assert","    assert car.current_speed == current_speed_value","","","# case-18","def test_sound_horn_when_car_engine_started_and_return_car_sound(capfd):","","    # Arrange","    car = Car(","        color='Red',","        max_speed=130,","        acceleration=10,","        tyre_friction=3","    )","    sound = \"Beep Beep\\n\"","    car.start_engine()","","    # Act","    car.sound_horn()","    output = capfd.readouterr()","","    # Assert","    assert output.out == sound","","","# case-19","def test_sound_horn_when_car_engine_stoped_and_return_start_engine_to_sound_horn(capfd):","","    # Arrange","    car = Car(","        color='Red',","        max_speed=130,","        acceleration=10,","        tyre_friction=3","    )","    start_engine_to_sound = \"Start the engine to sound_horn\\n\"","","    # Act","    car.sound_horn()","    output = capfd.readouterr()","","    # Assert","    assert output.out == start_engine_to_sound","","","# case-20","def test_car_object_instance_create_and_engine_status():","","    # Arrange","    car = Car(","        color='Red',","        max_speed=130,","        acceleration=10,","        tyre_friction=3","    )","    engine_started = False","","    # Act","","    # Assert","    assert car.is_engine_started == engine_started","","","# case-21","def test_car_max_speed_attribute_encapsulation_raise_attrubute_error(car):","","    # Arrange","    attribute_error = \"can't set attribute\"","","    # Act","    with pytest.raises(AttributeError) as error:","        car.max_speed = 5","","    # Assert","    assert str(error.value) == attribute_error","","","# case-22","def test_car_acceleration_attribute_encapsulation_raise_attrubute_error(car):","","    # Arrange","    attribute_error = \"can't set attribute\"","","    # Act","    with pytest.raises(AttributeError) as error:","        car.acceleration = 5 ","","    # Assert","    assert str(error.value) == attribute_error","","","# case-23","def test_car_tyre_friction_attribute_encapsulation_raise_attrubute_error(car):","","    # Arrange","    attribute_error = \"can't set attribute\"","","    # Act","    with pytest.raises(AttributeError) as error:","        car.tyre_friction = 5","","    # Assert","    assert str(error.value) == attribute_error","","","# case-24","def test_car_current_speed_attribute_encapsulation_raise_attrubute_error(car):","","    # Arrange","    attribute_error = \"can't set attribute\"","","    # Act","    with pytest.raises(AttributeError) as error:","        car.current_speed = 5","    ","    # Assert","    assert str(error.value) == attribute_error","","","# case-25","def test_car_is_engine_started_attribute_encapsulation_raise_attrubute_error(car):","","    # Arrange","    attribute_error = \"can't set attribute\"","","    # Act","    with pytest.raises(AttributeError) as error:","        car.is_engine_started = False","","    # Assert","    assert str(error.value) == attribute_error","","","# case-26","def test_car_color_attribute_encapsulation_raise_attrubute_error(car):","","    # Arrange","    attribute_error = \"can't set attribute\"","","    # Act","    with pytest.raises(AttributeError) as error:","        car.color = 'Yellow'","","    # Assert","    assert str(error.value) == attribute_error",""],"id":184},{"start":{"row":0,"column":0},"end":{"row":464,"column":0},"action":"insert","lines":["import pytest","from car import Car","","","@pytest.fixture","def car():","","    car_obj = Car(","        color='Red',","        max_speed=30,","        acceleration=10,","        tyre_friction=3","    )","    return car_obj","","","# case-1","def test_create_car_object_instance_with_valid_details():","","    # Arrange","    color = 'Blue'","    max_speed = 30","    acceleration = 10","    tyre_friction = 5","","    # Act","    car = Car(","        color=color,","        max_speed=max_speed,","        acceleration=acceleration,","        tyre_friction=tyre_friction","    )","","    # Assert","    assert car.color == color","    assert car.max_speed == max_speed","    assert car.acceleration == acceleration","    assert car.tyre_friction == tyre_friction","","","# case-2","@pytest.mark.parametrize(\"color, max_speed, acceleration, tyre_friction\", [","    ('Red', 1, 1, 1)])","def test_create_car_object_instance_multiple_times_with_valid_details(","        color, max_speed, acceleration, tyre_friction):","","    # Arrange","","    # Act","    car_1 = Car(","        color=color,","        max_speed=max_speed,","        acceleration=acceleration,","        tyre_friction=tyre_friction","    )","","    car_2 = Car(","        color=color,","        max_speed=max_speed,","        acceleration=acceleration,","        tyre_friction=tyre_friction","    )","","    # Assert","    assert car_1.color == color","    assert car_1.max_speed == max_speed","    assert car_1.acceleration == acceleration","    assert car_1.tyre_friction == tyre_friction","","    assert car_2.color == color","    assert car_2.max_speed == max_speed","    assert car_2.acceleration == acceleration","    assert car_2.tyre_friction == tyre_friction","","","# case-3","@pytest.mark.parametrize(\"color, max_speed, acceleration, tyre_friction\", [","    ('Red', 0, 10, 15), ('Blue', -1, 10, 5)])","def test_create_car_object_with_invalid_max_speed_value_raise_error(","        color, max_speed, acceleration, tyre_friction):","","    # Arrange","    invalid_max_speed = 'Invalid value for max_speed'","","    # Act","    with pytest.raises(ValueError) as car:","        assert Car(","            color=color,","            max_speed=max_speed,","            acceleration=acceleration,","            tyre_friction=tyre_friction","        )","","    # Assert","    assert str(car.value) == invalid_max_speed","","","# case-3","@pytest.mark.parametrize(\"color, max_speed, acceleration, tyre_friction\", [","    ('Red', 30, 0, 5), ('Blue', 30, -1, 5)])","def test_create_car_object_with_invalid_acceleration_value_raise_error(","        color, max_speed, acceleration, tyre_friction):","","    # Arrange","    invalid_acceleration = 'Invalid value for acceleration'","","    # Act","    with pytest.raises(ValueError) as car:","        assert Car(","            color=color,","            max_speed=max_speed,","            acceleration=acceleration,","            tyre_friction=tyre_friction","        )","","    # Assert","    assert str(car.value) == invalid_acceleration","","","# case-3","@pytest.mark.parametrize(\"color, max_speed, acceleration, tyre_friction\", [","    ('Red', 30, 10, 0), ('Blue', 30, 10, -1)])","def test_create_car_object_with_invalid_tyre_friction_value_raise_error(","        color, max_speed, acceleration, tyre_friction):","","    # Arrange","    invalid_tyre_friction = 'Invalid value for tyre_friction'","","    # Act","    with pytest.raises(ValueError) as car:","        assert Car(","            color=color,","            max_speed=max_speed,","            acceleration=acceleration,","            tyre_friction=tyre_friction","        )","","    # Assert","    assert str(car.value) == invalid_tyre_friction","","","# case-9","def test_start_engine_when_car_is_in_rest_and_update_is_engine_started(car):","","    # Arrange","    engine_started = True","","    # Act","    car.start_engine()","","    # Assert","    assert car.is_engine_started == engine_started","","","# case-10","def test_stop_engine_when_car_is_in_motion_and_update_is_engine_started(car):","","    # Arrange","    engine_started = False","    car.start_engine()","","    # Act","    car.stop_engine()","","    # Assert","    assert car.is_engine_started == engine_started","","","# case-11","def test_accelerate_car_when_engine_started_and_update_current_speed():","","    # Arrange","    car = Car(","        color='Red',","        max_speed=20,","        acceleration=10,","        tyre_friction=5","    )","    current_speed_value = 10","    car.start_engine()","","    # Act","    car.accelerate()","","    # Assert","    assert car.current_speed == current_speed_value","","","# case-12","def test_accelerate_car_when_engine_stoped_and_print_start_engine(capfd):","","    # Arrange","    car = Car(","        color='Red',","        max_speed=20,","        acceleration=10,","        tyre_friction=5","    )","    start_engine_to_accelerate = \"Start the engine to accelerate\\n\"","","    # Act","    car.accelerate()","    output = capfd.readouterr()","","    # Assert","    assert output.out == start_engine_to_accelerate","","","# case-13","def test_accelerate_car_multiple_times_and_update_current_speed():","","    # Arrange","    car = Car(","        color='Red',","        max_speed=100,","        acceleration=10,","        tyre_friction=5","    )","    current_speed_value = 40","    car.start_engine()","","    # Act","    car.accelerate()","    car.accelerate()","    car.accelerate()","    car.accelerate()","","    # Assert","    assert car.current_speed == current_speed_value","","","# case-14","def test_accelerate_car_when_current_speed_reaches_maximum_and_update_current_speed():","","    # Arrange","    car = Car(","        color='Red',","        max_speed=30,","        acceleration=10,","        tyre_friction=5","    )","    current_speed_value = 30","    car.start_engine()","","    # Act","    car.accelerate()","    car.accelerate()","    car.accelerate()","    car.accelerate()","","    # Assert","    assert car.current_speed == current_speed_value","","","# case-15","def test_apply_brakes_to_car_and_update_current_speed():","","    # Arrange","    car = Car(","        color='Red',","        max_speed=100,","        acceleration=10,","        tyre_friction=10","    )","    current_speed_value = 0","    car.start_engine()","    car.accelerate()","    car.accelerate()","    car.accelerate()","","    # Act","    car.apply_brakes()","    car.apply_brakes()","    car.apply_brakes()","","    # Assert","    assert car.current_speed == current_speed_value","","","# case-16","def test_apply_brakes_when_car_current_speed_is_less_than_tyre_friction_and_update_current_speed():","","    # Arrange","    car = Car(","        color='Red',","        max_speed=20,","        acceleration=9,","        tyre_friction=10","    )","    current_speed_value = 0","    car.start_engine()","    car.accelerate()","","    # Act","    car.apply_brakes()","","    # Assert","    assert car.current_speed == current_speed_value","","","# case-17","def test_apply_brakes_when_car_current_speed_is_more_than_tyre_friction_and_update_current_speed():","","    # Arrange","    car = Car(","        color='Red',","        max_speed=130,","        acceleration=10,","        tyre_friction=3","    )","    current_speed_value = 1","    car.start_engine()","    car.accelerate()","","    # Act","    car.apply_brakes()","    car.apply_brakes()","    car.apply_brakes()","","    # Assert","    assert car.current_speed == current_speed_value","","","# case-18","def test_sound_horn_when_car_engine_started_and_return_car_sound(capfd):","","    # Arrange","    car = Car(","        color='Red',","        max_speed=130,","        acceleration=10,","        tyre_friction=3","    )","    sound = \"Beep Beep\\n\"","    car.start_engine()","","    # Act","    car.sound_horn()","    output = capfd.readouterr()","","    # Assert","    assert output.out == sound","","","# case-19","def test_sound_horn_when_car_engine_stoped_and_return_start_engine_to_sound_horn(capfd):","","    # Arrange","    car = Car(","        color='Red',","        max_speed=130,","        acceleration=10,","        tyre_friction=3","    )","    start_engine_to_sound = \"Start the engine to sound_horn\\n\"","","    # Act","    car.sound_horn()","    output = capfd.readouterr()","","    # Assert","    assert output.out == start_engine_to_sound","","","# case-20","def test_car_object_instance_create_and_engine_status():","","    # Arrange","    car = Car(","        color='Red',","        max_speed=130,","        acceleration=10,","        tyre_friction=3","    )","    engine_started = False","","    # Act","","    # Assert","    assert car.is_engine_started == engine_started","","","# case-21","def test_car_max_speed_attribute_encapsulation_raise_attrubute_error(car):","","    # Arrange","    attribute_error = \"can't set attribute\"","","    # Act","    with pytest.raises(AttributeError) as error:","        car.max_speed = 5","","    # Assert","    assert str(error.value) == attribute_error","","","# case-22","def test_car_acceleration_attribute_encapsulation_raise_attrubute_error(car):","","    # Arrange","    attribute_error = \"can't set attribute\"","","    # Act","    with pytest.raises(AttributeError) as error:","        car.acceleration = 5","","    # Assert","    assert str(error.value) == attribute_error","","","# case-23","def test_car_tyre_friction_attribute_encapsulation_raise_attrubute_error(car):","","    # Arrange","    attribute_error = \"can't set attribute\"","","    # Act","    with pytest.raises(AttributeError) as error:","        car.tyre_friction = 5","","    # Assert","    assert str(error.value) == attribute_error","","","# case-24","def test_car_current_speed_attribute_encapsulation_raise_attrubute_error(car):","","    # Arrange","    attribute_error = \"can't set attribute\"","","    # Act","    with pytest.raises(AttributeError) as error:","        car.current_speed = 5","","    # Assert","    assert str(error.value) == attribute_error","","","# case-25","def test_car_is_engine_started_attribute_encapsulation_raise_attrubute_error(car):","","    # Arrange","    attribute_error = \"can't set attribute\"","","    # Act","    with pytest.raises(AttributeError) as error:","        car.is_engine_started = False","","    # Assert","    assert str(error.value) == attribute_error","","","# case-26","def test_car_color_attribute_encapsulation_raise_attrubute_error(car):","","    # Arrange","    attribute_error = \"can't set attribute\"","","    # Act","    with pytest.raises(AttributeError) as error:","        car.color = 'Yellow'","","    # Assert","    assert str(error.value) == attribute_error",""]}],[{"start":{"row":232,"column":62},"end":{"row":232,"column":63},"action":"remove","lines":["_"],"id":185},{"start":{"row":232,"column":61},"end":{"row":232,"column":62},"action":"remove","lines":["d"]},{"start":{"row":232,"column":60},"end":{"row":232,"column":61},"action":"remove","lines":["n"]},{"start":{"row":232,"column":59},"end":{"row":232,"column":60},"action":"remove","lines":["a"]},{"start":{"row":232,"column":58},"end":{"row":232,"column":59},"action":"remove","lines":["_"]},{"start":{"row":232,"column":57},"end":{"row":232,"column":58},"action":"remove","lines":["m"]},{"start":{"row":232,"column":56},"end":{"row":232,"column":57},"action":"remove","lines":["u"]},{"start":{"row":232,"column":55},"end":{"row":232,"column":56},"action":"remove","lines":["m"]},{"start":{"row":232,"column":54},"end":{"row":232,"column":55},"action":"remove","lines":["i"]},{"start":{"row":232,"column":53},"end":{"row":232,"column":54},"action":"remove","lines":["x"]},{"start":{"row":232,"column":52},"end":{"row":232,"column":53},"action":"remove","lines":["a"]},{"start":{"row":232,"column":51},"end":{"row":232,"column":52},"action":"remove","lines":["m"]},{"start":{"row":232,"column":50},"end":{"row":232,"column":51},"action":"remove","lines":["_"]},{"start":{"row":232,"column":49},"end":{"row":232,"column":50},"action":"remove","lines":["s"]},{"start":{"row":232,"column":48},"end":{"row":232,"column":49},"action":"remove","lines":["e"]},{"start":{"row":232,"column":47},"end":{"row":232,"column":48},"action":"remove","lines":["h"]},{"start":{"row":232,"column":46},"end":{"row":232,"column":47},"action":"remove","lines":["c"]},{"start":{"row":232,"column":45},"end":{"row":232,"column":46},"action":"remove","lines":["a"]},{"start":{"row":232,"column":44},"end":{"row":232,"column":45},"action":"remove","lines":["e"]},{"start":{"row":232,"column":43},"end":{"row":232,"column":44},"action":"remove","lines":["r"]},{"start":{"row":232,"column":42},"end":{"row":232,"column":43},"action":"remove","lines":["_"]},{"start":{"row":232,"column":41},"end":{"row":232,"column":42},"action":"remove","lines":["d"]},{"start":{"row":232,"column":40},"end":{"row":232,"column":41},"action":"remove","lines":["e"]},{"start":{"row":232,"column":39},"end":{"row":232,"column":40},"action":"remove","lines":["e"]},{"start":{"row":232,"column":38},"end":{"row":232,"column":39},"action":"remove","lines":["p"]},{"start":{"row":232,"column":37},"end":{"row":232,"column":38},"action":"remove","lines":["s"]},{"start":{"row":232,"column":36},"end":{"row":232,"column":37},"action":"remove","lines":["_"]},{"start":{"row":232,"column":35},"end":{"row":232,"column":36},"action":"remove","lines":["t"]},{"start":{"row":232,"column":34},"end":{"row":232,"column":35},"action":"remove","lines":["n"]},{"start":{"row":232,"column":33},"end":{"row":232,"column":34},"action":"remove","lines":["e"]},{"start":{"row":232,"column":32},"end":{"row":232,"column":33},"action":"remove","lines":["r"]},{"start":{"row":232,"column":31},"end":{"row":232,"column":32},"action":"remove","lines":["r"]},{"start":{"row":232,"column":30},"end":{"row":232,"column":31},"action":"remove","lines":["u"]}],[{"start":{"row":232,"column":29},"end":{"row":232,"column":30},"action":"remove","lines":["c"],"id":186},{"start":{"row":232,"column":28},"end":{"row":232,"column":29},"action":"remove","lines":["_"]},{"start":{"row":232,"column":27},"end":{"row":232,"column":28},"action":"remove","lines":["n"]},{"start":{"row":232,"column":26},"end":{"row":232,"column":27},"action":"remove","lines":["e"]},{"start":{"row":232,"column":25},"end":{"row":232,"column":26},"action":"remove","lines":["h"]},{"start":{"row":232,"column":24},"end":{"row":232,"column":25},"action":"remove","lines":["w"]}],[{"start":{"row":232,"column":24},"end":{"row":232,"column":25},"action":"insert","lines":["a"],"id":187},{"start":{"row":232,"column":25},"end":{"row":232,"column":26},"action":"insert","lines":["n"]},{"start":{"row":232,"column":26},"end":{"row":232,"column":27},"action":"insert","lines":["d"]},{"start":{"row":232,"column":27},"end":{"row":232,"column":28},"action":"insert","lines":["_"]}],[{"start":{"row":232,"column":49},"end":{"row":232,"column":50},"action":"insert","lines":["_"],"id":188}],[{"start":{"row":232,"column":49},"end":{"row":232,"column":50},"action":"remove","lines":["_"],"id":189}],[{"start":{"row":232,"column":48},"end":{"row":232,"column":49},"action":"insert","lines":["_"],"id":190},{"start":{"row":232,"column":49},"end":{"row":232,"column":50},"action":"insert","lines":["w"]},{"start":{"row":232,"column":50},"end":{"row":232,"column":51},"action":"insert","lines":["h"]},{"start":{"row":232,"column":51},"end":{"row":232,"column":52},"action":"insert","lines":["e"]},{"start":{"row":232,"column":52},"end":{"row":232,"column":53},"action":"insert","lines":["n"]},{"start":{"row":232,"column":53},"end":{"row":232,"column":54},"action":"insert","lines":["_"]}],[{"start":{"row":232,"column":54},"end":{"row":232,"column":55},"action":"insert","lines":["i"],"id":191},{"start":{"row":232,"column":55},"end":{"row":232,"column":56},"action":"insert","lines":["t"]}],[{"start":{"row":232,"column":55},"end":{"row":232,"column":56},"action":"remove","lines":["t"],"id":192},{"start":{"row":232,"column":54},"end":{"row":232,"column":55},"action":"remove","lines":["i"]}],[{"start":{"row":232,"column":54},"end":{"row":232,"column":55},"action":"insert","lines":["m"],"id":193},{"start":{"row":232,"column":55},"end":{"row":232,"column":56},"action":"insert","lines":["a"]},{"start":{"row":232,"column":56},"end":{"row":232,"column":57},"action":"insert","lines":["x"]},{"start":{"row":232,"column":57},"end":{"row":232,"column":58},"action":"insert","lines":["i"]},{"start":{"row":232,"column":58},"end":{"row":232,"column":59},"action":"insert","lines":["m"]},{"start":{"row":232,"column":59},"end":{"row":232,"column":60},"action":"insert","lines":["u"]},{"start":{"row":232,"column":60},"end":{"row":232,"column":61},"action":"insert","lines":["m"]}],[{"start":{"row":280,"column":95},"end":{"row":280,"column":96},"action":"remove","lines":["d"],"id":194},{"start":{"row":280,"column":94},"end":{"row":280,"column":95},"action":"remove","lines":["e"]},{"start":{"row":280,"column":93},"end":{"row":280,"column":94},"action":"remove","lines":["e"]},{"start":{"row":280,"column":92},"end":{"row":280,"column":93},"action":"remove","lines":["p"]},{"start":{"row":280,"column":91},"end":{"row":280,"column":92},"action":"remove","lines":["s"]},{"start":{"row":280,"column":90},"end":{"row":280,"column":91},"action":"remove","lines":["_"]},{"start":{"row":280,"column":89},"end":{"row":280,"column":90},"action":"remove","lines":["t"]},{"start":{"row":280,"column":88},"end":{"row":280,"column":89},"action":"remove","lines":["n"]},{"start":{"row":280,"column":87},"end":{"row":280,"column":88},"action":"remove","lines":["e"]},{"start":{"row":280,"column":86},"end":{"row":280,"column":87},"action":"remove","lines":["r"]},{"start":{"row":280,"column":85},"end":{"row":280,"column":86},"action":"remove","lines":["r"]},{"start":{"row":280,"column":84},"end":{"row":280,"column":85},"action":"remove","lines":["u"]},{"start":{"row":280,"column":83},"end":{"row":280,"column":84},"action":"remove","lines":["c"]},{"start":{"row":280,"column":82},"end":{"row":280,"column":83},"action":"remove","lines":["_"]},{"start":{"row":280,"column":81},"end":{"row":280,"column":82},"action":"remove","lines":["e"]},{"start":{"row":280,"column":80},"end":{"row":280,"column":81},"action":"remove","lines":["t"]},{"start":{"row":280,"column":79},"end":{"row":280,"column":80},"action":"remove","lines":["a"]},{"start":{"row":280,"column":78},"end":{"row":280,"column":79},"action":"remove","lines":["d"]},{"start":{"row":280,"column":77},"end":{"row":280,"column":78},"action":"remove","lines":["p"]},{"start":{"row":280,"column":76},"end":{"row":280,"column":77},"action":"remove","lines":["u"]},{"start":{"row":280,"column":75},"end":{"row":280,"column":76},"action":"remove","lines":["_"]},{"start":{"row":280,"column":74},"end":{"row":280,"column":75},"action":"remove","lines":["d"]},{"start":{"row":280,"column":73},"end":{"row":280,"column":74},"action":"remove","lines":["n"]},{"start":{"row":280,"column":72},"end":{"row":280,"column":73},"action":"remove","lines":["a"]}],[{"start":{"row":280,"column":71},"end":{"row":280,"column":72},"action":"remove","lines":["_"],"id":195}],[{"start":{"row":301,"column":95},"end":{"row":301,"column":96},"action":"remove","lines":["d"],"id":196},{"start":{"row":301,"column":94},"end":{"row":301,"column":95},"action":"remove","lines":["e"]},{"start":{"row":301,"column":93},"end":{"row":301,"column":94},"action":"remove","lines":["e"]},{"start":{"row":301,"column":92},"end":{"row":301,"column":93},"action":"remove","lines":["p"]},{"start":{"row":301,"column":91},"end":{"row":301,"column":92},"action":"remove","lines":["s"]},{"start":{"row":301,"column":90},"end":{"row":301,"column":91},"action":"remove","lines":["_"]},{"start":{"row":301,"column":89},"end":{"row":301,"column":90},"action":"remove","lines":["t"]},{"start":{"row":301,"column":88},"end":{"row":301,"column":89},"action":"remove","lines":["n"]},{"start":{"row":301,"column":87},"end":{"row":301,"column":88},"action":"remove","lines":["e"]},{"start":{"row":301,"column":86},"end":{"row":301,"column":87},"action":"remove","lines":["r"]},{"start":{"row":301,"column":85},"end":{"row":301,"column":86},"action":"remove","lines":["r"]},{"start":{"row":301,"column":84},"end":{"row":301,"column":85},"action":"remove","lines":["u"]},{"start":{"row":301,"column":83},"end":{"row":301,"column":84},"action":"remove","lines":["c"]},{"start":{"row":301,"column":82},"end":{"row":301,"column":83},"action":"remove","lines":["_"]},{"start":{"row":301,"column":81},"end":{"row":301,"column":82},"action":"remove","lines":["e"]},{"start":{"row":301,"column":80},"end":{"row":301,"column":81},"action":"remove","lines":["t"]},{"start":{"row":301,"column":79},"end":{"row":301,"column":80},"action":"remove","lines":["a"]},{"start":{"row":301,"column":78},"end":{"row":301,"column":79},"action":"remove","lines":["d"]},{"start":{"row":301,"column":77},"end":{"row":301,"column":78},"action":"remove","lines":["p"]},{"start":{"row":301,"column":76},"end":{"row":301,"column":77},"action":"remove","lines":["u"]},{"start":{"row":301,"column":75},"end":{"row":301,"column":76},"action":"remove","lines":["_"]},{"start":{"row":301,"column":74},"end":{"row":301,"column":75},"action":"remove","lines":["d"]},{"start":{"row":301,"column":73},"end":{"row":301,"column":74},"action":"remove","lines":["n"]},{"start":{"row":301,"column":72},"end":{"row":301,"column":73},"action":"remove","lines":["a"]}],[{"start":{"row":301,"column":71},"end":{"row":301,"column":72},"action":"remove","lines":["_"],"id":197}],[{"start":{"row":345,"column":79},"end":{"row":345,"column":80},"action":"remove","lines":["n"],"id":198},{"start":{"row":345,"column":78},"end":{"row":345,"column":79},"action":"remove","lines":["r"]},{"start":{"row":345,"column":77},"end":{"row":345,"column":78},"action":"remove","lines":["o"]},{"start":{"row":345,"column":76},"end":{"row":345,"column":77},"action":"remove","lines":["h"]},{"start":{"row":345,"column":75},"end":{"row":345,"column":76},"action":"remove","lines":["_"]},{"start":{"row":345,"column":74},"end":{"row":345,"column":75},"action":"remove","lines":["d"]},{"start":{"row":345,"column":73},"end":{"row":345,"column":74},"action":"remove","lines":["n"]},{"start":{"row":345,"column":72},"end":{"row":345,"column":73},"action":"remove","lines":["u"]},{"start":{"row":345,"column":71},"end":{"row":345,"column":72},"action":"remove","lines":["o"]},{"start":{"row":345,"column":70},"end":{"row":345,"column":71},"action":"remove","lines":["s"]},{"start":{"row":345,"column":69},"end":{"row":345,"column":70},"action":"remove","lines":["_"]}],[{"start":{"row":345,"column":68},"end":{"row":345,"column":69},"action":"remove","lines":["o"],"id":199},{"start":{"row":345,"column":67},"end":{"row":345,"column":68},"action":"remove","lines":["t"]},{"start":{"row":345,"column":66},"end":{"row":345,"column":67},"action":"remove","lines":["_"]}],[{"start":{"row":345,"column":52},"end":{"row":345,"column":53},"action":"remove","lines":["n"],"id":200},{"start":{"row":345,"column":51},"end":{"row":345,"column":52},"action":"remove","lines":["r"]},{"start":{"row":345,"column":50},"end":{"row":345,"column":51},"action":"remove","lines":["u"]},{"start":{"row":345,"column":49},"end":{"row":345,"column":50},"action":"remove","lines":["t"]},{"start":{"row":345,"column":48},"end":{"row":345,"column":49},"action":"remove","lines":["e"]},{"start":{"row":345,"column":47},"end":{"row":345,"column":48},"action":"remove","lines":["r"]}],[{"start":{"row":345,"column":47},"end":{"row":345,"column":48},"action":"insert","lines":["p"],"id":201},{"start":{"row":345,"column":48},"end":{"row":345,"column":49},"action":"insert","lines":["r"]},{"start":{"row":345,"column":49},"end":{"row":345,"column":50},"action":"insert","lines":["i"]},{"start":{"row":345,"column":50},"end":{"row":345,"column":51},"action":"insert","lines":["n"]},{"start":{"row":345,"column":51},"end":{"row":345,"column":52},"action":"insert","lines":["t"]}],[{"start":{"row":439,"column":77},"end":{"row":440,"column":0},"action":"insert","lines":["",""],"id":202},{"start":{"row":440,"column":0},"end":{"row":440,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":440,"column":4},"end":{"row":440,"column":8},"action":"insert","lines":["    "],"id":203}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":5,"column":10},"end":{"row":5,"column":10},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1587483638584,"hash":"cf8675711ebccbfd739fc7a18b8f690a4579330d"}