{"filter":false,"title":"test_truck.py","tooltip":"/clean_code/clean_code_submissions/clean_code_assignment_002/tests/test_truck.py","undoManager":{"mark":71,"position":71,"stack":[[{"start":{"row":4,"column":0},"end":{"row":13,"column":20},"action":"remove","lines":["@pytest.fixture","def truck():","    truck_obj = Truck(","        color='Blue',","        max_speed=1,","        acceleration=1,","        tyre_friction=1,","        max_cargo_weight=1","    )","    return truck_obj"],"id":2}],[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"remove","lines":["",""],"id":3},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"remove","lines":["",""]},{"start":{"row":1,"column":23},"end":{"row":2,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":191,"column":0},"end":{"row":256,"column":0},"action":"remove","lines":["# case-8","def test_accelerate_truck_when_engine_started_and_update_current_speed():","","    # Arrange","    truck = Truck(","        color='Blue',","        max_speed=1,","        acceleration=1,","        tyre_friction=1,","        max_cargo_weight=1","    )","    truck.start_engine()","    current_speed_value = 1","","    # Act","    truck.accelerate()","","    # Assert","    assert truck.current_speed == current_speed_value","","","# case-9","def test_accelerate_truck_when_engine_stoped_and_print_start_engine_(capfd):","","    # Arrange","    truck = Truck(","        color='Blue',","        max_speed=1,","        acceleration=1,","        tyre_friction=1,","        max_cargo_weight=1","    )","    start_engine_to_accelerate = \"Start the engine to accelerate\\n\"","","    # Act","    truck.accelerate()","    output = capfd.readouterr()","","    # Assert","    assert output.out == start_engine_to_accelerate","","","# case-10","def test_accelerate_truck_and_update_current_speed_when_maximum():","","    # Arrange","    truck = Truck(","        color='Blue',","        max_speed=9,","        acceleration=3,","        tyre_friction=1,","        max_cargo_weight=1","    )","    truck.start_engine()","","    # Act","    truck.accelerate()","    truck.accelerate()","    truck.accelerate()","    truck.accelerate()","    current_speed_value = 9","","    # Assert","    assert truck.current_speed == current_speed_value","",""],"id":4}],[{"start":{"row":190,"column":0},"end":{"row":191,"column":0},"action":"remove","lines":["",""],"id":5}],[{"start":{"row":191,"column":0},"end":{"row":234,"column":0},"action":"remove","lines":["# case-11","def test_apply_brakes_when_truck_current_speed_is_less_than_tyre_friction():","","    # Arrange","    truck = Truck(","        color='Blue',","        max_speed=5,","        acceleration=3,","        tyre_friction=4,","        max_cargo_weight=1","    )","    truck.start_engine()","    truck.accelerate()","","    # Act","    truck.apply_brakes()","    current_speed_value = 0","","    # Assert","    assert truck.current_speed == current_speed_value","","","# case-12","def test_apply_brakes_when_truck_current_speed_is_more_than_tyre_friction():","","    # Arrange","    truck = Truck(","        color='Blue',","        max_speed=5,","        acceleration=4,","        tyre_friction=3,","        max_cargo_weight=1","    )","    truck.start_engine()","    truck.accelerate()","","    # Act","    truck.apply_brakes()","    current_speed_value = 1","","    # Assert","    assert truck.current_speed == current_speed_value","",""],"id":6}],[{"start":{"row":190,"column":0},"end":{"row":191,"column":0},"action":"remove","lines":["",""],"id":7}],[{"start":{"row":253,"column":0},"end":{"row":373,"column":0},"action":"remove","lines":["# case-","def test_load_when_truck_in_motion_and_print_string(capfd):","","    # Arrange","    truck = Truck(","        color='Blue',","        max_speed=5,","        acceleration=4,","        tyre_friction=3,","        max_cargo_weight=100","    )","    truck.start_engine()","    truck.accelerate()","    cannot_load = \"Cannot load cargo during motion\\n\"","","    # Act","    truck.load(1)","    output = capfd.readouterr()","","    # Assert","    assert output.out == cannot_load","","","def test_load_when_truck_not_in_motion_with_invalid_load_values_raise_error():","","    # Arrange","    truck = Truck(","        color='Blue',","        max_speed=5,","        acceleration=4,","        tyre_friction=3,","        max_cargo_weight=100","    )","    truck.start_engine()","    invalid_cargo_weight = \"Invalid value for cargo_weight\"","","    # Act","    with pytest.raises(ValueError) as error:","        truck.load(-1)","","    # Assert","    assert str(error.value) == invalid_cargo_weight","","","def test_load_when_truck_at_rest_and_print_string_when_load_maximum(capfd):","","    # Arrange","    color = 'Blue'","    max_speed = 5","    acceleration = 4","    tyre_friction = 3","    max_cargo_weight = 1","","    truck = Truck(","        color=color,","        max_speed=max_speed,","        acceleration=acceleration,","        tyre_friction=tyre_friction,","        max_cargo_weight=max_cargo_weight","    )","    cannot_load_more = (\"Cannot load cargo more than max limit: {}\\n\"","                        .format(max_cargo_weight))","","    # Act","    truck.load(2)","    output = capfd.readouterr()","","    # Assert","    assert output.out == cannot_load_more","","","def test_load_when_truck_at_rest_with_valid_load_values_and_update_load():","","    # Arrange","    color = 'Blue'","    max_speed = 5","    acceleration = 4","    tyre_friction = 3","    max_cargo_weight = 1","","    truck = Truck(","        color=color,","        max_speed=max_speed,","        acceleration=acceleration,","        tyre_friction=tyre_friction,","        max_cargo_weight=max_cargo_weight","    )","    load_value = 1","","    # Act","    truck.load(1)","","    # Assert","    assert truck.current_load_weight == load_value","","","def test_load_when_truck_at_rest_with_load_value_to_zero_and_update_load():","","    # Arrange","    color = 'Blue'","    max_speed = 5","    acceleration = 4","    tyre_friction = 3","    max_cargo_weight = 100","","    truck = Truck(","        color=color,","        max_speed=max_speed,","        acceleration=acceleration,","        tyre_friction=tyre_friction,","        max_cargo_weight=max_cargo_weight","    )","    load_value = 0","","    # Act","    truck.load(0)","","    # Assert","    assert truck.current_load_weight == load_value","",""],"id":8}],[{"start":{"row":252,"column":0},"end":{"row":253,"column":0},"action":"remove","lines":["",""],"id":9}],[{"start":{"row":253,"column":0},"end":{"row":352,"column":0},"action":"remove","lines":["# case-","def test_unload_when_truck_in_motion_and_print_string(capfd):","","    # Arrange","    truck = Truck(","        color='Blue',","        max_speed=5,","        acceleration=4,","        tyre_friction=3,","        max_cargo_weight=100","    )","    truck.start_engine()","    truck.load(1)","    truck.accelerate()","    cannot_unload = \"Cannot unload cargo during motion\\n\"","","    # Act","    truck.unload(1)","    output = capfd.readouterr()","","    # Assert","    assert output.out == cannot_unload","","","def test_unload_when_truck_at_rest_with_invalid_load_values_raise_error():","","    # Arrange","    truck = Truck(","        color='Blue',","        max_speed=5,","        acceleration=4,","        tyre_friction=3,","        max_cargo_weight=100","    )","    truck.start_engine()","    truck.load(5)","    invalid_cargo_weight = \"Invalid value for cargo_weight\"","","    # Act","    with pytest.raises(ValueError) as error:","        truck.unload(-1)","","    # Assert","    assert str(error.value) == invalid_cargo_weight","","","def test_unload_when_truck_at_rest_with_load_value_equal_to_available_load():","","    # Arrange","    color = 'Blue'","    max_speed = 5","    acceleration = 4","    tyre_friction = 3","    max_cargo_weight = 100","","    truck = Truck(","        color=color,","        max_speed=max_speed,","        acceleration=acceleration,","        tyre_friction=tyre_friction,","        max_cargo_weight=max_cargo_weight","    )","","    truck.load(2)","    load_value = 0","","    # Act","    truck.unload(2)","","    # Assert","    assert truck.current_load_weight == load_value","","","def test_unload_when_truck_at_rest_with_load_value_zero_and_update_load():","","    # Arrange","    color = 'Blue'","    max_speed = 5","    acceleration = 4","    tyre_friction = 3","    max_cargo_weight = 100","","    truck = Truck(","        color=color,","        max_speed=max_speed,","        acceleration=acceleration,","        tyre_friction=tyre_friction,","        max_cargo_weight=max_cargo_weight","    )","","    truck.load(2)","    load_value = 2","","    # Act","    truck.unload(0)","","    # Assert","    assert truck.current_load_weight == load_value","",""],"id":10}],[{"start":{"row":252,"column":0},"end":{"row":253,"column":0},"action":"remove","lines":["",""],"id":11}],[{"start":{"row":253,"column":0},"end":{"row":348,"column":46},"action":"remove","lines":["# case-21","def test_truck_max_speed_encapsulation_raise_attrubute_error(truck):","","    # Arrange","    attribute_error = \"can't set attribute\"","","    # Act","    with pytest.raises(AttributeError) as error:","        truck.max_speed = 5","","    # Assert","    assert str(error.value) == attribute_error","","","# case-22","def test_truck_acceleration_encapsulation_raise_attrubute_error(truck):","","    # Arrange","    attribute_error = \"can't set attribute\"","","    # Act","    with pytest.raises(AttributeError) as error:","        truck.acceleration = 5","","    # Assert","    assert str(error.value) == attribute_error","","","# case-23","def test_truck_tyre_friction_encapsulation_raise_attrubute_error(truck):","","    # Arrange","    attribute_error = \"can't set attribute\"","","    # Act","    with pytest.raises(AttributeError) as error:","        truck.tyre_friction = 5","","    # Assert","    assert str(error.value) == attribute_error","","","# case-24","def test_truck_current_speed_encapsulation_raise_attrubute_error(truck):","","    # Arrange","    attribute_error = \"can't set attribute\"","","    # Act","    with pytest.raises(AttributeError) as error:","        truck.current_speed = 5","","    # Assert","    assert str(error.value) == attribute_error","","","# case-25","def test_truck_is_engine_started_encapsulation_raise_attrubute_error(truck):","","    # Arrange","    attribute_error = \"can't set attribute\"","","    # Act","    with pytest.raises(AttributeError) as error:","        truck.is_engine_started = False","","    # Assert","    assert str(error.value) == attribute_error","","","# case-26","def test_truck_color_encapsulation_raise_attrubute_error(truck):","","    # Arrange","    attribute_error = \"can't set attribute\"","","    # Act","    with pytest.raises(AttributeError) as error:","        truck.color = 'Yellow'","","    # Assert","    assert str(error.value) == attribute_error","","","# case-26","def test_truck_max_cargo_weight_encapsulation_raise_attrubute_error(truck):","","    # Arrange","    attribute_error = \"can't set attribute\"","","    # Act","    with pytest.raises(AttributeError) as error:","        truck.max_cargo_weight = 50","","    # Assert","    assert str(error.value) == attribute_error"],"id":12}],[{"start":{"row":253,"column":0},"end":{"row":254,"column":0},"action":"remove","lines":["",""],"id":13},{"start":{"row":252,"column":0},"end":{"row":253,"column":0},"action":"remove","lines":["",""]},{"start":{"row":251,"column":0},"end":{"row":252,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":162,"column":0},"end":{"row":190,"column":0},"action":"remove","lines":["# case-6","def test_start_engine_when_truck_is_at_rest_and_update_is_engine_started(","        truck):","","    # Arrange","    engine_started = True","","    # Act","    truck.start_engine()","","    # Assert","    assert truck.is_engine_started == engine_started","","","# case-7","def test_stop_engine_when_truck_is_in_motion_and_update_is_engine_started(","        truck):","","    # Arrange","    engine_started = False","    truck.start_engine()","","    # Act","    truck.stop_engine()","","    # Assert","    assert truck.is_engine_started == engine_started","",""],"id":14}],[{"start":{"row":161,"column":0},"end":{"row":162,"column":0},"action":"remove","lines":["",""],"id":15}],[{"start":{"row":162,"column":0},"end":{"row":204,"column":0},"action":"remove","lines":["# case-13","def test_sound_horn_when_truck_engine_started_and_return_car_sound(capfd):","","    # Arrange","    truck = Truck(","        color='Blue',","        max_speed=5,","        acceleration=4,","        tyre_friction=3,","        max_cargo_weight=1","    )","    truck.start_engine()","    sound = \"Honk Honk\\n\"","","    # Act","    truck.sound_horn()","    output = capfd.readouterr()","","    # Assert","    assert output.out == sound","","","# case-14","def test_sound_horn_when_truck_engine_stoped_and_print_start_engine(capfd):","","    # Arrange","    truck = Truck(","        color='Blue',","        max_speed=5,","        acceleration=4,","        tyre_friction=3,","        max_cargo_weight=1","    )","    start_engine_to_sound = \"Start the engine to sound_horn\\n\"","","    # Act","    truck.sound_horn()","    output = capfd.readouterr()","","    # Assert","    assert output.out == start_engine_to_sound","",""],"id":16}],[{"start":{"row":161,"column":0},"end":{"row":162,"column":0},"action":"remove","lines":["",""],"id":17}],[{"start":{"row":179,"column":0},"end":{"row":180,"column":0},"action":"insert","lines":["",""],"id":18},{"start":{"row":180,"column":0},"end":{"row":181,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":181,"column":0},"end":{"row":208,"column":0},"action":"insert","lines":["# case-6","def test_start_engine_when_truck_is_at_rest_and_update_is_engine_started(","        truck):","","    # Arrange","    engine_started = True","","    # Act","    truck.start_engine()","","    # Assert","    assert truck.is_engine_started == engine_started","","","# case-7","def test_stop_engine_when_truck_is_in_motion_and_update_is_engine_started(","        truck):","","    # Arrange","    engine_started = False","    truck.start_engine()","","    # Act","    truck.stop_engine()","","    # Assert","    assert truck.is_engine_started == engine_started",""],"id":19}],[{"start":{"row":123,"column":13},"end":{"row":124,"column":0},"action":"remove","lines":["",""],"id":20}],[{"start":{"row":145,"column":13},"end":{"row":146,"column":0},"action":"remove","lines":["",""],"id":21}],[{"start":{"row":173,"column":9},"end":{"row":174,"column":0},"action":"remove","lines":["",""],"id":22}],[{"start":{"row":100,"column":13},"end":{"row":101,"column":0},"action":"remove","lines":["",""],"id":23}],[{"start":{"row":77,"column":13},"end":{"row":78,"column":0},"action":"remove","lines":["",""],"id":24}],[{"start":{"row":54,"column":9},"end":{"row":55,"column":0},"action":"remove","lines":["",""],"id":25}],[{"start":{"row":21,"column":9},"end":{"row":22,"column":0},"action":"remove","lines":["",""],"id":26}],[{"start":{"row":19,"column":5},"end":{"row":20,"column":0},"action":"remove","lines":["",""],"id":27}],[{"start":{"row":138,"column":73},"end":{"row":139,"column":0},"action":"remove","lines":["",""],"id":28}],[{"start":{"row":19,"column":5},"end":{"row":20,"column":0},"action":"insert","lines":["",""],"id":29},{"start":{"row":20,"column":0},"end":{"row":20,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":20,"column":0},"end":{"row":20,"column":4},"action":"remove","lines":["    "],"id":30}],[{"start":{"row":5,"column":59},"end":{"row":6,"column":0},"action":"remove","lines":["",""],"id":31}],[{"start":{"row":34,"column":73},"end":{"row":35,"column":0},"action":"remove","lines":["",""],"id":32}],[{"start":{"row":71,"column":73},"end":{"row":72,"column":0},"action":"remove","lines":["",""],"id":33}],[{"start":{"row":92,"column":73},"end":{"row":93,"column":0},"action":"remove","lines":["",""],"id":34}],[{"start":{"row":113,"column":73},"end":{"row":114,"column":0},"action":"remove","lines":["",""],"id":35}],[{"start":{"row":151,"column":58},"end":{"row":152,"column":0},"action":"remove","lines":["",""],"id":36}],[{"start":{"row":169,"column":15},"end":{"row":170,"column":0},"action":"remove","lines":["",""],"id":37}],[{"start":{"row":182,"column":15},"end":{"row":183,"column":0},"action":"remove","lines":["",""],"id":38}],[{"start":{"row":7,"column":16},"end":{"row":7,"column":17},"action":"remove","lines":["e"],"id":39},{"start":{"row":7,"column":15},"end":{"row":7,"column":16},"action":"remove","lines":["u"]},{"start":{"row":7,"column":14},"end":{"row":7,"column":15},"action":"remove","lines":["l"]},{"start":{"row":7,"column":13},"end":{"row":7,"column":14},"action":"remove","lines":["B"]}],[{"start":{"row":7,"column":13},"end":{"row":7,"column":14},"action":"insert","lines":["a"],"id":40},{"start":{"row":7,"column":14},"end":{"row":7,"column":15},"action":"insert","lines":["g"]}],[{"start":{"row":7,"column":14},"end":{"row":7,"column":15},"action":"remove","lines":["g"],"id":41},{"start":{"row":7,"column":13},"end":{"row":7,"column":14},"action":"remove","lines":["a"]}],[{"start":{"row":7,"column":13},"end":{"row":7,"column":14},"action":"insert","lines":["G"],"id":42},{"start":{"row":7,"column":14},"end":{"row":7,"column":15},"action":"insert","lines":["o"]},{"start":{"row":7,"column":15},"end":{"row":7,"column":16},"action":"insert","lines":["l"]},{"start":{"row":7,"column":16},"end":{"row":7,"column":17},"action":"insert","lines":["d"]}],[{"start":{"row":32,"column":9},"end":{"row":32,"column":10},"action":"remove","lines":["d"],"id":43},{"start":{"row":32,"column":8},"end":{"row":32,"column":9},"action":"remove","lines":["e"]},{"start":{"row":32,"column":7},"end":{"row":32,"column":8},"action":"remove","lines":["R"]}],[{"start":{"row":32,"column":7},"end":{"row":32,"column":8},"action":"insert","lines":["F"],"id":44},{"start":{"row":32,"column":8},"end":{"row":32,"column":9},"action":"insert","lines":["o"]},{"start":{"row":32,"column":9},"end":{"row":32,"column":10},"action":"insert","lines":["l"]}],[{"start":{"row":32,"column":9},"end":{"row":32,"column":10},"action":"remove","lines":["l"],"id":45},{"start":{"row":32,"column":8},"end":{"row":32,"column":9},"action":"remove","lines":["o"]},{"start":{"row":32,"column":7},"end":{"row":32,"column":8},"action":"remove","lines":["F"]}],[{"start":{"row":32,"column":7},"end":{"row":32,"column":8},"action":"insert","lines":["g"],"id":46}],[{"start":{"row":32,"column":7},"end":{"row":32,"column":8},"action":"remove","lines":["g"],"id":47}],[{"start":{"row":32,"column":7},"end":{"row":32,"column":8},"action":"insert","lines":["G"],"id":48},{"start":{"row":32,"column":8},"end":{"row":32,"column":9},"action":"insert","lines":["o"]},{"start":{"row":32,"column":9},"end":{"row":32,"column":10},"action":"insert","lines":["l"]},{"start":{"row":32,"column":10},"end":{"row":32,"column":11},"action":"insert","lines":["d"]},{"start":{"row":32,"column":11},"end":{"row":32,"column":12},"action":"insert","lines":["e"]}],[{"start":{"row":32,"column":12},"end":{"row":32,"column":13},"action":"insert","lines":["n"],"id":49},{"start":{"row":32,"column":13},"end":{"row":32,"column":14},"action":"insert","lines":["R"]},{"start":{"row":32,"column":14},"end":{"row":32,"column":15},"action":"insert","lines":["o"]},{"start":{"row":32,"column":15},"end":{"row":32,"column":16},"action":"insert","lines":["d"]}],[{"start":{"row":69,"column":9},"end":{"row":69,"column":10},"action":"remove","lines":["d"],"id":50},{"start":{"row":69,"column":8},"end":{"row":69,"column":9},"action":"remove","lines":["e"]},{"start":{"row":69,"column":7},"end":{"row":69,"column":8},"action":"remove","lines":["R"]}],[{"start":{"row":69,"column":7},"end":{"row":69,"column":8},"action":"insert","lines":["G"],"id":51},{"start":{"row":69,"column":8},"end":{"row":69,"column":9},"action":"insert","lines":["r"]},{"start":{"row":69,"column":9},"end":{"row":69,"column":10},"action":"insert","lines":["a"]},{"start":{"row":69,"column":10},"end":{"row":69,"column":11},"action":"insert","lines":["y"]}],[{"start":{"row":69,"column":33},"end":{"row":69,"column":34},"action":"remove","lines":["e"],"id":52},{"start":{"row":69,"column":32},"end":{"row":69,"column":33},"action":"remove","lines":["u"]},{"start":{"row":69,"column":31},"end":{"row":69,"column":32},"action":"remove","lines":["l"]},{"start":{"row":69,"column":30},"end":{"row":69,"column":31},"action":"remove","lines":["B"]}],[{"start":{"row":69,"column":30},"end":{"row":69,"column":31},"action":"insert","lines":["G"],"id":53},{"start":{"row":69,"column":31},"end":{"row":69,"column":32},"action":"insert","lines":["r"]},{"start":{"row":69,"column":32},"end":{"row":69,"column":33},"action":"insert","lines":["e"]},{"start":{"row":69,"column":33},"end":{"row":69,"column":34},"action":"insert","lines":["y"]}],[{"start":{"row":90,"column":9},"end":{"row":90,"column":10},"action":"remove","lines":["d"],"id":54},{"start":{"row":90,"column":8},"end":{"row":90,"column":9},"action":"remove","lines":["e"]},{"start":{"row":90,"column":7},"end":{"row":90,"column":8},"action":"remove","lines":["R"]}],[{"start":{"row":90,"column":7},"end":{"row":90,"column":8},"action":"insert","lines":["G"],"id":55},{"start":{"row":90,"column":8},"end":{"row":90,"column":9},"action":"insert","lines":["r"]},{"start":{"row":90,"column":9},"end":{"row":90,"column":10},"action":"insert","lines":["e"]},{"start":{"row":90,"column":10},"end":{"row":90,"column":11},"action":"insert","lines":["e"]},{"start":{"row":90,"column":11},"end":{"row":90,"column":12},"action":"insert","lines":["n"]}],[{"start":{"row":90,"column":34},"end":{"row":90,"column":35},"action":"remove","lines":["e"],"id":56},{"start":{"row":90,"column":33},"end":{"row":90,"column":34},"action":"remove","lines":["u"]},{"start":{"row":90,"column":32},"end":{"row":90,"column":33},"action":"remove","lines":["l"]},{"start":{"row":90,"column":31},"end":{"row":90,"column":32},"action":"remove","lines":["B"]}],[{"start":{"row":90,"column":31},"end":{"row":90,"column":32},"action":"insert","lines":["G"],"id":57},{"start":{"row":90,"column":32},"end":{"row":90,"column":33},"action":"insert","lines":["r"]},{"start":{"row":90,"column":33},"end":{"row":90,"column":34},"action":"insert","lines":["e"]},{"start":{"row":90,"column":34},"end":{"row":90,"column":35},"action":"insert","lines":["e"]},{"start":{"row":90,"column":35},"end":{"row":90,"column":36},"action":"insert","lines":["n"]},{"start":{"row":90,"column":36},"end":{"row":90,"column":37},"action":"insert","lines":["Y"]}],[{"start":{"row":90,"column":37},"end":{"row":90,"column":38},"action":"insert","lines":["e"],"id":58},{"start":{"row":90,"column":38},"end":{"row":90,"column":39},"action":"insert","lines":["l"]},{"start":{"row":90,"column":39},"end":{"row":90,"column":40},"action":"insert","lines":["o"]}],[{"start":{"row":90,"column":39},"end":{"row":90,"column":40},"action":"remove","lines":["o"],"id":59}],[{"start":{"row":90,"column":39},"end":{"row":90,"column":40},"action":"insert","lines":["l"],"id":60},{"start":{"row":90,"column":40},"end":{"row":90,"column":41},"action":"insert","lines":["o"]},{"start":{"row":90,"column":41},"end":{"row":90,"column":42},"action":"insert","lines":["w"]}],[{"start":{"row":111,"column":9},"end":{"row":111,"column":10},"action":"remove","lines":["d"],"id":61},{"start":{"row":111,"column":8},"end":{"row":111,"column":9},"action":"remove","lines":["e"]},{"start":{"row":111,"column":7},"end":{"row":111,"column":8},"action":"remove","lines":["R"]}],[{"start":{"row":111,"column":7},"end":{"row":111,"column":8},"action":"insert","lines":["H"],"id":62},{"start":{"row":111,"column":8},"end":{"row":111,"column":9},"action":"insert","lines":["o"]},{"start":{"row":111,"column":9},"end":{"row":111,"column":10},"action":"insert","lines":["n"]},{"start":{"row":111,"column":10},"end":{"row":111,"column":11},"action":"insert","lines":["e"]},{"start":{"row":111,"column":11},"end":{"row":111,"column":12},"action":"insert","lines":["y"]},{"start":{"row":111,"column":12},"end":{"row":111,"column":13},"action":"insert","lines":["D"]}],[{"start":{"row":111,"column":13},"end":{"row":111,"column":14},"action":"insert","lines":["e"],"id":63},{"start":{"row":111,"column":14},"end":{"row":111,"column":15},"action":"insert","lines":["w"]}],[{"start":{"row":111,"column":37},"end":{"row":111,"column":38},"action":"remove","lines":["e"],"id":64},{"start":{"row":111,"column":36},"end":{"row":111,"column":37},"action":"remove","lines":["u"]},{"start":{"row":111,"column":35},"end":{"row":111,"column":36},"action":"remove","lines":["l"]},{"start":{"row":111,"column":34},"end":{"row":111,"column":35},"action":"remove","lines":["B"]}],[{"start":{"row":111,"column":34},"end":{"row":111,"column":35},"action":"insert","lines":["H"],"id":65},{"start":{"row":111,"column":35},"end":{"row":111,"column":36},"action":"insert","lines":["o"]},{"start":{"row":111,"column":36},"end":{"row":111,"column":37},"action":"insert","lines":["t"]},{"start":{"row":111,"column":37},"end":{"row":111,"column":38},"action":"insert","lines":["P"]},{"start":{"row":111,"column":38},"end":{"row":111,"column":39},"action":"insert","lines":["i"]},{"start":{"row":111,"column":39},"end":{"row":111,"column":40},"action":"insert","lines":["n"]}],[{"start":{"row":111,"column":40},"end":{"row":111,"column":41},"action":"insert","lines":["k"],"id":66}],[{"start":{"row":132,"column":9},"end":{"row":132,"column":10},"action":"remove","lines":["d"],"id":67},{"start":{"row":132,"column":8},"end":{"row":132,"column":9},"action":"remove","lines":["e"]},{"start":{"row":132,"column":7},"end":{"row":132,"column":8},"action":"remove","lines":["R"]}],[{"start":{"row":132,"column":7},"end":{"row":132,"column":8},"action":"insert","lines":["I"],"id":68},{"start":{"row":132,"column":8},"end":{"row":132,"column":9},"action":"insert","lines":["n"]},{"start":{"row":132,"column":9},"end":{"row":132,"column":10},"action":"insert","lines":["d"]},{"start":{"row":132,"column":10},"end":{"row":132,"column":11},"action":"insert","lines":["i"]},{"start":{"row":132,"column":11},"end":{"row":132,"column":12},"action":"insert","lines":["a"]},{"start":{"row":132,"column":12},"end":{"row":132,"column":13},"action":"insert","lines":["n"]}],[{"start":{"row":132,"column":13},"end":{"row":132,"column":14},"action":"insert","lines":["R"],"id":69},{"start":{"row":132,"column":14},"end":{"row":132,"column":15},"action":"insert","lines":["e"]},{"start":{"row":132,"column":15},"end":{"row":132,"column":16},"action":"insert","lines":["d"]}],[{"start":{"row":132,"column":37},"end":{"row":132,"column":38},"action":"remove","lines":["e"],"id":70},{"start":{"row":132,"column":36},"end":{"row":132,"column":37},"action":"remove","lines":["u"]},{"start":{"row":132,"column":35},"end":{"row":132,"column":36},"action":"remove","lines":["l"]},{"start":{"row":132,"column":34},"end":{"row":132,"column":35},"action":"remove","lines":["B"]}],[{"start":{"row":132,"column":34},"end":{"row":132,"column":35},"action":"insert","lines":["I"],"id":71},{"start":{"row":132,"column":35},"end":{"row":132,"column":36},"action":"insert","lines":["n"]},{"start":{"row":132,"column":36},"end":{"row":132,"column":37},"action":"insert","lines":["d"]},{"start":{"row":132,"column":37},"end":{"row":132,"column":38},"action":"insert","lines":["i"]},{"start":{"row":132,"column":38},"end":{"row":132,"column":39},"action":"insert","lines":["g"]},{"start":{"row":132,"column":39},"end":{"row":132,"column":40},"action":"insert","lines":["o"]}],[{"start":{"row":154,"column":18},"end":{"row":154,"column":19},"action":"remove","lines":["e"],"id":72},{"start":{"row":154,"column":17},"end":{"row":154,"column":18},"action":"remove","lines":["u"]},{"start":{"row":154,"column":16},"end":{"row":154,"column":17},"action":"remove","lines":["l"]},{"start":{"row":154,"column":15},"end":{"row":154,"column":16},"action":"remove","lines":["B"]}],[{"start":{"row":154,"column":15},"end":{"row":154,"column":16},"action":"insert","lines":["K"],"id":73},{"start":{"row":154,"column":16},"end":{"row":154,"column":17},"action":"insert","lines":["h"]},{"start":{"row":154,"column":17},"end":{"row":154,"column":18},"action":"insert","lines":["a"]},{"start":{"row":154,"column":18},"end":{"row":154,"column":19},"action":"insert","lines":["k"]},{"start":{"row":154,"column":19},"end":{"row":154,"column":20},"action":"insert","lines":["i"]}]]},"ace":{"folds":[],"scrolltop":3604,"scrollleft":0,"selection":{"start":{"row":154,"column":20},"end":{"row":154,"column":20},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":179,"state":"start","mode":"ace/mode/python"}},"timestamp":1587546200537,"hash":"5cc26bc16962577a0517837288621e1ee65ebb3b"}