{"filter":false,"title":"test_replies_for_comment","tooltip":"/clean_code/clean_code_submissions/clean_code_assignment_004/fb_post/tests/test_replies_for_comment","undoManager":{"mark":2,"position":2,"stack":[[{"start":{"row":0,"column":0},"end":{"row":38,"column":0},"action":"insert","lines":["@pytest.mark.django_db","class TestRepliesForComment:","    ","    pytest.mark.django_db","    ","    def test_get_replies_for_comment_and_return_list_of_replies(","        self, user, post, comment, replycomment):","        ","        # Arrange","        comment_id = 2","        list_of_replies = [{'comment_id': 5,","                            'commenter': {","                                'user_id': 1, ","                                'name': 'Prathap', ","                                'profile_pic': ''","                                },","                            'commented_at': '2020-04-18 00:00:00.000000',","                            'comment_content': 'haa'","            }]","        ","        # Act","        replies = get_replies_for_comment(comment_id)","        ","        # Assert","        assert replies == list_of_replies","      ","        ","    def test_get_replies_for_comment_with_invalid_comment_id_raise_error(","        self, user, post, comment, replycomment):","        ","        # Arrange","        comment_id = 0","        ","        # Act","        with pytest.raises(InvalidCommentException):","            get_replies_for_comment(comment_id)    ","         ","          ",""],"id":1}],[{"start":{"row":37,"column":10},"end":{"row":38,"column":0},"action":"remove","lines":["",""],"id":2},{"start":{"row":37,"column":9},"end":{"row":37,"column":10},"action":"remove","lines":[" "]},{"start":{"row":37,"column":8},"end":{"row":37,"column":9},"action":"remove","lines":[" "]},{"start":{"row":37,"column":4},"end":{"row":37,"column":8},"action":"remove","lines":["    "]},{"start":{"row":37,"column":0},"end":{"row":37,"column":4},"action":"remove","lines":["    "]},{"start":{"row":36,"column":9},"end":{"row":37,"column":0},"action":"remove","lines":["",""]},{"start":{"row":36,"column":8},"end":{"row":36,"column":9},"action":"remove","lines":[" "]},{"start":{"row":36,"column":4},"end":{"row":36,"column":8},"action":"remove","lines":["    "]},{"start":{"row":36,"column":0},"end":{"row":36,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":3},{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":2,"column":0},"end":{"row":2,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1587807846692,"hash":"bd01a4e3a1bd497a8f1458133e5d0a14852b1730"}